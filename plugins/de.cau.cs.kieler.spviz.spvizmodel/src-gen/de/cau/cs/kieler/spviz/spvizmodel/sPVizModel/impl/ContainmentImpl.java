/**
 * KIELER - Kiel Integrated Environment for Layout Eclipse RichClient
 * 
 * http://rtsys.informatik.uni-kiel.de/kieler
 * 
 * Copyright 2021 by
 * + Kiel University
 *   + Department of Computer Science
 *     + Real-Time and Embedded Systems Group
 * 
 * Generated by Xtext 2.25.0
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 */
package de.cau.cs.kieler.spviz.spvizmodel.sPVizModel.impl;

import de.cau.cs.kieler.spviz.spvizmodel.sPVizModel.Artifact;
import de.cau.cs.kieler.spviz.spvizmodel.sPVizModel.Containment;
import de.cau.cs.kieler.spviz.spvizmodel.sPVizModel.SPVizModelPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Containment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.spviz.spvizmodel.sPVizModel.impl.ContainmentImpl#getContains <em>Contains</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContainmentImpl extends ReferenceImpl implements Containment
{
  /**
   * The cached value of the '{@link #getContains() <em>Contains</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContains()
   * @generated
   * @ordered
   */
  protected Artifact contains;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContainmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SPVizModelPackage.Literals.CONTAINMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Artifact getContains()
  {
    if (contains != null && contains.eIsProxy())
    {
      InternalEObject oldContains = (InternalEObject)contains;
      contains = (Artifact)eResolveProxy(oldContains);
      if (contains != oldContains)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SPVizModelPackage.CONTAINMENT__CONTAINS, oldContains, contains));
      }
    }
    return contains;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Artifact basicGetContains()
  {
    return contains;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContains(Artifact newContains)
  {
    Artifact oldContains = contains;
    contains = newContains;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SPVizModelPackage.CONTAINMENT__CONTAINS, oldContains, contains));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SPVizModelPackage.CONTAINMENT__CONTAINS:
        if (resolve) return getContains();
        return basicGetContains();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SPVizModelPackage.CONTAINMENT__CONTAINS:
        setContains((Artifact)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SPVizModelPackage.CONTAINMENT__CONTAINS:
        setContains((Artifact)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SPVizModelPackage.CONTAINMENT__CONTAINS:
        return contains != null;
    }
    return super.eIsSet(featureID);
  }

} //ContainmentImpl
