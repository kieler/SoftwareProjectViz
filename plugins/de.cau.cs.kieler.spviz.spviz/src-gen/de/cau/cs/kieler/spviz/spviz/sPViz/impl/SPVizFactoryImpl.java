/**
 * KIELER - Kiel Integrated Environment for Layout Eclipse RichClient
 * 
 * http://rtsys.informatik.uni-kiel.de/kieler
 * 
 * Copyright 2023 by
 * + Kiel University
 *   + Department of Computer Science
 *     + Real-Time and Embedded Systems Group
 * 
 * Generated by Xtext 2.27.0
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 */
package de.cau.cs.kieler.spviz.spviz.sPViz.impl;

import de.cau.cs.kieler.spviz.spviz.sPViz.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SPVizFactoryImpl extends EFactoryImpl implements SPVizFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SPVizFactory init()
  {
    try
    {
      SPVizFactory theSPVizFactory = (SPVizFactory)EPackage.Registry.INSTANCE.getEFactory(SPVizPackage.eNS_URI);
      if (theSPVizFactory != null)
      {
        return theSPVizFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SPVizFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SPVizFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SPVizPackage.SP_VIZ: return createSPViz();
      case SPVizPackage.VIEW: return createView();
      case SPVizPackage.ARTIFACT_SHOWS: return createArtifactShows();
      case SPVizPackage.ARTIFACT_VIEW: return createArtifactView();
      case SPVizPackage.ARTIFACT_SOURCE: return createArtifactSource();
      case SPVizPackage.ARTIFACT_CHAIN: return createArtifactChain();
      case SPVizPackage.SHOWN_ELEMENT: return createShownElement();
      case SPVizPackage.SHOWN_CONNECTION: return createShownConnection();
      case SPVizPackage.SHOWN_CATEGORY_CONNECTION: return createShownCategoryConnection();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SPViz createSPViz()
  {
    SPVizImpl spViz = new SPVizImpl();
    return spViz;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public View createView()
  {
    ViewImpl view = new ViewImpl();
    return view;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArtifactShows createArtifactShows()
  {
    ArtifactShowsImpl artifactShows = new ArtifactShowsImpl();
    return artifactShows;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArtifactView createArtifactView()
  {
    ArtifactViewImpl artifactView = new ArtifactViewImpl();
    return artifactView;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArtifactSource createArtifactSource()
  {
    ArtifactSourceImpl artifactSource = new ArtifactSourceImpl();
    return artifactSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArtifactChain createArtifactChain()
  {
    ArtifactChainImpl artifactChain = new ArtifactChainImpl();
    return artifactChain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ShownElement createShownElement()
  {
    ShownElementImpl shownElement = new ShownElementImpl();
    return shownElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ShownConnection createShownConnection()
  {
    ShownConnectionImpl shownConnection = new ShownConnectionImpl();
    return shownConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ShownCategoryConnection createShownCategoryConnection()
  {
    ShownCategoryConnectionImpl shownCategoryConnection = new ShownCategoryConnectionImpl();
    return shownCategoryConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SPVizPackage getSPVizPackage()
  {
    return (SPVizPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SPVizPackage getPackage()
  {
    return SPVizPackage.eINSTANCE;
  }

} //SPVizFactoryImpl
