/*
 * KIELER - Kiel Integrated Environment for Layout Eclipse RichClient
 *
 * http://rtsys.informatik.uni-kiel.de/kieler
 * 
 * Copyright 2020-2023 by
 * + Kiel University
 *   + Department of Computer Science
 *     + Real-Time and Embedded Systems Group
 * 
 * This code is provided under the terms of the Eclipse Public License 2.0 (EPL-2.0).
 */
grammar de.cau.cs.kieler.spviz.spviz.SPViz with org.eclipse.xtext.common.Terminals

generate sPViz "http://www.cau.de/cs/kieler/spviz/spviz/SPViz"

import "http://www.cau.de/cs/kieler/spviz/spvizmodel/SPVizModel" as spvizmodel

SPViz:
	'package' package=QualifiedName
	'import' importURI=STRING
	'SPViz' name=ID '{'
		views += View*
		artifactShows += ArtifactShows*
	'}'
;

View:
	name=ID '{'
		(shownElements+=ShownElement)*
	    (shownConnections+=ShownConnection)*
	    (shownCategoryConnections+=ShownCategoryConnection)*
	'}'
;

ArtifactShows:
    artifactShows=[spvizmodel::Artifact|QualifiedName] 'shows' '{'
        views += ArtifactView*
    '}'
;

ArtifactView:
    view = [View] 'with' '{'
        sources += ArtifactSource*
    '}'
;

ArtifactSource:
    artifact = [spvizmodel::Artifact|QualifiedName]
    'from' sourceChain = ArtifactChain
;

ArtifactChain:
    source = [spvizmodel::Artifact|QualifiedName] ('>' further = ArtifactChain)?
;

ShownElement:
	'show' shownElement=[spvizmodel::Artifact|QualifiedName]
	(
		'in' containedIn=[spvizmodel::Artifact|QualifiedName]
	)?
;

ShownConnection:
	'connect' shownConnection=[spvizmodel::Connection|QualifiedName]
//	(
//		'via' via=[spvizmodel::Artifact|QualifiedName]
//	)?
;

ShownCategoryConnection:
    'connect' connection=[spvizmodel::Connection|QualifiedName]
    'via' sourceChain=ArtifactChain
    
    // TODO: we may need an alternative syntax for category connections, where the source/target element is not clear,
    // e.g. by writing connect Feature to Feature via source Feature>Bundle and target Feature>Bundle and connection Dependency
;

QualifiedName:
	ID ('.' ID)*
;